name: Pipeline

on: [push]
env:
  IMAGE_NAME: app2

jobs:

  lint:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Setup Python environment
      uses: actions/setup-python@v1.1.1
    - name: Install requirements
      run: pip install --quiet --requirement requirements.txt
    - name: Lint code
      run: |
        flake8 --ignore=E501,E231 *.py
        pylint --disable=C0301 --disable=C0326 *.py
    - name: Run unit tests
      run: |
        python -m unittest --verbose --failfast        
  build_image:
    needs: lint
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '274.0.1'
        service_account_email: ${{ secrets.GCP_SERVICE_ACCT_EMAIL }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
    - run: gcloud info
    - name: Build and tag image
      #docker tag <user-name>/<sample-image-name> gcr.io/<project-id>/<sample-image-name>:<tag>
      #run: docker build -t "docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:latest" .
      run: docker build -t "gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.PACKAGE_NAME }}:latest" .
    #- name: Docker login
    #  run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
    #  env:
    #    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Publish to GitHub Package Registry
      #run: docker push "docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:latest"
      run: gcloud docker -- push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ env.PACKAGE_NAME }}:latest
  #test_image:
  #  needs: build_image
  #  runs-on: ubuntu-18.04
  #  steps:
  #  - name: Docker login
  #    run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
  #    env:
  #      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #  - name: Run unit tests in container
  #    run: docker run "docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:latest" -m unittest --verbose --failfast

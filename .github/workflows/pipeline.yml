name: Pipeline

on: [push]
env:
  PACKAGE_NAME: app2

jobs:

  lint:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Setup Python environment
      uses: actions/setup-python@v1.1.1
    - name: Install requirements
      run: pip install --quiet --requirement requirements.txt
    - name: Lint code
      run: |
        flake8 --ignore=E501,E231 *.py
        pylint --disable=C0301 --disable=C0326 *.py
    - name: Run unit tests
      run: |
        python -m unittest --verbose --failfast        
  build_image:
    needs: lint
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCT_KEY }}
      with:
        args: builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/$PACKAGE_NAME
    #- name: Build and tag image
    #  run: docker build -t "docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:latest" .
    #- name: Docker login
    #  run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
    #  env:
    #    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    #- name: Publish to GitHub Package Registry
    #  run: docker push "docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:latest"
  #test_image:
  #  needs: build_image
  #  runs-on: ubuntu-18.04
  #  steps:
  #  - name: Docker login
  #    run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN
  #    env:
  #      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #  - name: Run unit tests in container
  #    run: docker run "docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:latest" -m unittest --verbose --failfast
